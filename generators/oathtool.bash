#!/usr/bin/env bash

# Usage:
#
#     $0 [ <oathtool_arguments> ]
#
# Set KEYS_FILE to set the location of the keys for use with oathtool. If not
# set, we will use /opt/dynamic-knockd/etc/oathtool.keys.  Set PROTOCOL (default
# tcp) to change it. The final output will be based on the number generated by
# the oathtool.  In order to limit the port range (so that we won't take up
# ports running by other applications), we employ the following method.
#
# First, we mode the oathtool code by a multiple of ten to get a number that is
# less than 4 figures. The number of figures is determined by SIG_DIGIT_MASK
# (default to 10000, or 4 figures). Then, we will take that number, and add in
# front of it, another number as determined by the user (PORT_SIG_DIGIT, which
# defaults to 1). Given these default options, our port range is limited between
# 10000 and 19999.
#

set -e

keys_file="${KEYS_FILE:-/opt/dynamic-knockd/etc/oathtool.keys}"
port_sig_digit=${PORT_SIG_DIGIT:-1}
protocol=${PROTOCOL:-tcp}
sig_digit_mask=${SIG_DIGIT_MASK:-10000}

while read key; do
    # left strip 0s, as bash will treat it as octal otherwise
    value=$(oathtool "$@" "$key" | sed "s/^0*//")
    # if value is empty, then it was all 0s
    if [[ ! "$value" ]]; then
        value=0
    fi
    value=$(($value % $sig_digit_mask))
    port=$(($port_sig_digit * $sig_digit_mask + value))
    echo $port:$protocol
done <"$keys_file"

